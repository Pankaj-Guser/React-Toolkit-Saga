{"version":3,"sources":["actions/tableActions.js","mockData/tableMockData.js","containers/tableContainer.js","reducers/tableDataReducer.js","reducers/rootReducer.js","utils/tableAPI.js","helpers/tableDataConverter.js","constants/tableUrl.js","Sagas/tableSaga.js","Sagas/rootSaga.js","store.js","App.js","index.js"],"names":["tableActions","FETCH_DATA_SAGA","GET_TABLE_DATA","ADD_ROW","REMOVE_ROW","GET_TABLE_DATA_ERROR","mockData","tableHeaderMockData","key","id","children","tableBodyMockData","toggleText","cells","title","TableComp","lazy","ListTodo","dispatch","useDispatch","tableData","useSelector","state","TableData","useEffect","type","fallback","addTableRow","newRow","payload","tabledata","removeTableRow","DEFAULT_ALLERGIES_STATE","error","rootReducer","combineReducers","action","callAPI","url","method","data","Axios","tableUrl","fetchDataSaga","rootSaga","call","result","put","takeEvery","all","tableSaga","middleware","sagaMiddleware","createSagaMiddleware","push","store","applyMiddleware","createStore","run","App","exact","path","component","TableContainer","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cba7ceda.chunk.js","sourcesContent":["export const tableActions = {\n    FETCH_DATA_SAGA: \"FETCH_DATA_SAGA\",\n    GET_TABLE_DATA: \"GET_TABLE_DATA\",\n    ADD_ROW: \"ADD_ROW\",\n    REMOVE_ROW: \"REMOVE_ROW\",\n    GET_TABLE_DATA_ERROR: \"GET_TABLE_DATA_ERROR\"\n};\n  \nexport default tableActions;","const mockData = {\n    tableHeaderMockData: [\n      { key: \"cell-0\", id: \"toggle-0\", children: \"Name\" },\n      { key: \"cell-1\", id: \"toggle-1\", children: \"Address\" },\n      { key: \"cell-2\", id: \"toggle-2\", children: \"Phone Number\" },\n      { key: \"cell-3\", id: \"toggle-3\", children: \"Email Id\" },\n    ],\n    tableBodyMockData: [\n    {key: '0', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '1', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '2', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '3', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '4', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '5', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n  ]\n}\nexport default mockData;","import React, {useEffect, Suspense, lazy} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { tableActions } from \"../actions/tableActions\";\r\nconst TableComp = lazy(() => import('../components/Table/Table'));\r\n\r\nexport default function ListTodo() {\r\n  const dispatch = useDispatch();\r\n  const tableData = useSelector(state => state.TableData); \r\n\r\n  useEffect(()=>{\r\n    dispatch({ type: tableActions.FETCH_DATA_SAGA })\r\n  }, [dispatch])\r\n  \r\n  const addTableRow = (newRow) => {\r\n\r\n    dispatch({type: \"ADD_ROW\", payload: [...tableData.tabledata, newRow]})\r\n  }\r\n  const removeTableRow = (tableData) => {\r\n    dispatch({type: \"REMOVE_ROW\", payload: tableData})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <TableComp \r\n          tableData = {tableData}\r\n          addTableRow = {addTableRow}\r\n          removeTableRow = {removeTableRow}\r\n        />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { tableActions }  from '../actions/tableActions';\n\nconst DEFAULT_ALLERGIES_STATE = {\n  tabledata: [],\n  error: \"\"\n};\n\n\nexport const TableData = (state = DEFAULT_ALLERGIES_STATE, action) => {\n  \n\n  switch (action.type) {\n\n    case tableActions.GET_TABLE_DATA:\n      return {\n        ...state,\n        tabledata: action.payload\n      };\n    case tableActions.ADD_ROW:\n      return {\n        ...state,\n        tabledata: action.payload\n      };\n    case tableActions.REMOVE_ROW:\n      return {\n        ...state,\n        tabledata: action.payload\n      }\n    case tableActions.GET_TABLE_DATA_ERROR: \n    return {\n      ...state,\n      error: action.payload\n    }\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport {\n    TableData\n} from './tableDataReducer.js';\n\nconst rootReducer = combineReducers({\n    TableData\n});\n\nexport default rootReducer;","import Axios from \"axios\";\n\nconst callAPI = async ({ url, method, data }) => {\n    return await Axios({\n      url,\n      method,\n      data\n    });\n  };\n\nexport { callAPI };\n","const TableData = (data) => {\n    return data;\n}\n\nexport default TableData","export const tableUrl = {\n  url: \"https://jsonplaceholder.typicode.com/todos/1\",\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\r\nimport { tableActions } from \"../actions/tableActions\";\r\nimport {callAPI} from \"../utils/tableAPI\";\r\nimport TableData from \"../helpers/tableDataConverter\"\r\nimport mockData from \"../mockData/tableMockData\"\r\nimport { tableUrl } from \"../constants/tableUrl\";\r\nexport function* fetchDataSaga() {\r\n  try {\r\n    let result = yield call( ()=> callAPI(tableUrl));\r\n    \r\n    result.data = TableData(mockData.tableBodyMockData);\r\n    yield put({type: tableActions.GET_TABLE_DATA, payload: result.data});\r\n  } catch (e) {\r\n    yield put({ type: tableActions.GET_TABLE_DATA_ERROR, payload: \"API server is down\" });\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeEvery(tableActions.FETCH_DATA_SAGA, fetchDataSaga);\r\n}\r\n","import { all } from 'redux-saga/effects';\n\nimport tableSaga from './tableSaga';\n\nexport default function* rootSaga() {\n    yield all([tableSaga()]);\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./Sagas/rootSaga\";\r\n\r\nlet middleware = [];\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst storeData = {}\r\nmiddleware.push(sagaMiddleware);\r\nconst store = applyMiddleware(...middleware)(createStore)(\r\n  rootReducer,\r\n  storeData\r\n  );\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport TableContainer from \"./containers/tableContainer\";\nimport store from \"./store\";\n\n\nconst App = () => {\n  return (\n      <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n              <Route exact path='/' component={TableContainer} />\n            </Switch>\n        </BrowserRouter>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}