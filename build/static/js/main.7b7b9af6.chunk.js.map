{"version":3,"sources":["actions/tableActions.js","mockData/TableMockData.js","Components/Table/ActionItems.js","Components/EmptyComp.js","Components/Table/Table.js","Containers/ListTodo.js","reducers/tableDataReducer.js","reducers/rootReducer.js","utils/todoApi.js","helpers/TableDataConverter.js","saga.js","store.js","App.js","index.js"],"names":["tableActions","FETCH_DATA_SAGA","GET_TABLE_DATA","ADD_ROW","REMOVE_ROW","mockData","tableHeaderMockData","key","id","children","tableBodyMockData","toggleText","cells","title","ActionItemsComp","props","dispatch","useDispatch","tableData","useSelector","state","TableData","selectedKeys","className","type","onClick","data","tabledata","newData","parseInt","length","toString","payload","filter","item","indexOf","EmptyComp","TableComp","tableHeaderData","maxSectionCount","useState","setSelectedKeys","handleRowToggle","event","metaData","preventDefault","Utils","toggleArrayValue","summaryId","summary","aria-multiselectable","rowStyle","numberOfColumns","cellPaddingStyle","dividerStyle","headerData","selectAllColumn","checkLabel","map","childItem","cell","bodyData","rows","rowData","createCell","isDisabled","canToggleArrayValue","toggleAction","onToggle","isToggled","toggleLabel","createRow","createRows","ActionItems","ListTodo","useEffect","addTableRow","newRow","removeTableRow","DEFAULT_ALLERGIES_STATE","rootReducer","combineReducers","action","todoApi","callAPI","url","method","Axios","fetchDataSaga","rootSaga","todoApiUrl","call","result","put","takeEvery","middleware","sagaMiddleware","createSagaMiddleware","push","store","applyMiddleware","createStore","run","saga","App","exact","path","component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7b7b9af6.chunk.js","sourcesContent":["export const tableActions = {\n    FETCH_DATA_SAGA: \"FETCH_DATA_SAGA\",\n    GET_TABLE_DATA: \"GET_TABLE_DATA\",\n    ADD_ROW: \"ADD_ROW\",\n    REMOVE_ROW: \"REMOVE_ROW\"\n};\n  \nexport default tableActions;","const mockData = {\n    tableHeaderMockData: [\n      { key: \"cell-0\", id: \"toggle-0\", children: \"Name\" },\n      { key: \"cell-1\", id: \"toggle-1\", children: \"Address\" },\n      { key: \"cell-2\", id: \"toggle-2\", children: \"Phone Number\" },\n      { key: \"cell-3\", id: \"toggle-3\", children: \"Email Id\" },\n    ],\n    tableBodyMockData: [\n    {key: '0', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '1', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '2', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '3', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '4', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n    {key: '5', \n    toggleText: \"toggle\",\n    cells:[\n      { key: 'cell-0', id: 'toggle-0', title: 'Name' },\n      { key: 'cell-1', id: 'toggle-1', title: 'Address' },\n      { key: 'cell-2', id: 'toggle-2', title: 'Phone Number' },\n      { key: 'cell-3', id: 'toggle-3', title: 'Email Id' },\n    ]},\n  ]\n}\nexport default mockData;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport tableActions from \"../../actions/tableActions\"\nimport \"./table.scss\";\n\nfunction ActionItemsComp(props) {\n  const dispatch = useDispatch();\n  const tableData = useSelector((state) => state.TableData);\n  const {selectedKeys} = props\n  \n  const RemoveSelected = () => {\n    let data = tableData.tabledata;\n    data = data.filter((item) => selectedKeys.indexOf(item.key) === -1);\n    dispatch({ type: tableActions.REMOVE_ROW, payload: data });\n  };\n\n  const AddElement = () => {\n    let data = tableData.tabledata;\n    const latestIndex = parseInt(data[data.length - 1].key) + 1;\n    const newData = {\n      key: latestIndex.toString(),\n      toggleText: \"toggle\",\n      cells: [\n        { key: \"cell-0\", id: \"toggle-0\", title: \"Name1\" },\n        { key: \"cell-1\", id: \"toggle-1\", title: \"Address\" },\n        { key: \"cell-2\", id: \"toggle-2\", title: \"Phone Number\" },\n        { key: \"cell-3\", id: \"toggle-3\", title: \"Email Id\" },\n      ],\n    };\n\n    dispatch({ type: tableActions.ADD_ROW, payload: [...tableData.tabledata, newData] });\n  };\n\n  return (\n    <>\n      <div className=\"btn-space\">\n        <button type=\"button\" onClick={AddElement}>\n          Add\n        </button>\n        <button type=\"button\" onClick={RemoveSelected}>\n          Remove\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default ActionItemsComp;\n","import React from \"react\";\n\nexport default function EmptyComp(props) {\n  \n  return (\n    <div >\n      No Record to show\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport mockData from \"../../mockData/TableMockData\";\nimport ActionItemsComp from \"./ActionItems\";\nimport Table, { Utils } from \"terra-table\";\nimport EmptyComp from \"../../Components/EmptyComp\";\nimport \"./table.scss\";\n\nexport default function TableComp(props) {\n  const { tableData } = props;\n\n  const tableHeaderData = mockData.tableHeaderMockData;\n\n  const maxSectionCount = tableData.tabledata.length - 1;\n\n  const createCell = (cell) => ({ key: cell.key, children: cell.title });\n  const createHeader = (cell) => ({ key: cell.key, children: cell.children });\n\n  const createCellsForRow = (cells) => cells.map((cell) => createCell(cell));\n\n  const [selectedKeys, setSelectedKeys] = useState([]);\n\n  const handleRowToggle = (event, metaData) => {\n    event.preventDefault();\n    setSelectedKeys(Utils.toggleArrayValue(selectedKeys, metaData.key));\n  };\n\n  const createRow = (rowData) => ({\n    key: rowData.key,\n    cells: createCellsForRow(rowData.cells),\n    isDisabled: !Utils.canToggleArrayValue(\n      maxSectionCount,\n      selectedKeys,\n      rowData.key\n    ),\n    toggleAction: {\n      metaData: { key: rowData.key },\n      onToggle: handleRowToggle,\n      isToggled: selectedKeys.indexOf(rowData.key) >= 0,\n      toggleLabel: rowData.toggleText,\n    },\n  });\n\n  const createRows = (data) => data.map((childItem) => createRow(childItem));\n  const createHeaders = (data) =>\n    data.map((childItem) => createHeader(childItem));\n\n  return (\n    <div>\n      {tableData.tabledata.length > 0 ? (\n        <div>\n          <Table\n            summaryId=\"example-multi-select\"\n            summary=\"This table shows an implementation of multiple row selection.\"\n            aria-multiselectable\n            rowStyle=\"toggle\"\n            numberOfColumns={4}\n            cellPaddingStyle=\"standard\"\n            dividerStyle=\"both\"\n            headerData={{\n              selectAllColumn: {\n                checkLabel: \"Multi Selection\",\n              },\n              cells: createHeaders(tableHeaderData),\n            }}\n            bodyData={[\n              {\n                rows: createRows(tableData.tabledata),\n              },\n            ]}\n          />\n          <ActionItemsComp selectedKeys={selectedKeys} />\n        </div>\n      ) : (\n        <EmptyComp />\n      )}\n    </div>\n  );\n}\n","import React, {useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { tableActions } from \"../actions/tableActions\";\r\nimport TableComp from \"../Components/Table/Table\";\r\n\r\nexport default function ListTodo() {\r\n  const dispatch = useDispatch();\r\n  const tableData = useSelector(state => state.TableData); \r\n\r\n  useEffect(()=>{\r\n    dispatch({ type: tableActions.FETCH_DATA_SAGA })\r\n  }, [dispatch])\r\n  \r\n  const addTableRow = (newRow) => {\r\n\r\n    dispatch({type: \"ADD_ROW\", payload: [...tableData.tabledata, newRow]})\r\n  }\r\n  const removeTableRow = (tableData) => {\r\n    dispatch({type: \"REMOVE_ROW\", payload: tableData})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TableComp \r\n        tableData = {tableData}\r\n        addTableRow = {addTableRow}\r\n        removeTableRow = {removeTableRow}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { tableActions }  from '../actions/tableActions';\n\nconst DEFAULT_ALLERGIES_STATE = {\n  tabledata: []\n};\n\n\nexport const TableData = (state = DEFAULT_ALLERGIES_STATE, action) => {\n  \n\n  switch (action.type) {\n\n    case tableActions.GET_TABLE_DATA:\n      return {\n        ...state,\n        tabledata: action.payload\n      };\n    case tableActions.ADD_ROW:\n      return {\n        ...state,\n        tabledata: action.payload\n      };\n    case tableActions.REMOVE_ROW:\n      return {\n        ...state,\n        tabledata: action.payload\n      }\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport {\n    TableData\n} from './tableDataReducer.js';\n\nconst rootReducer = combineReducers({\n    TableData\n});\n\nexport default rootReducer;","import Axios from \"axios\";\n\nconst callAPI = async ({ url, method, data }) => {\n    return await Axios({\n      url,\n      method,\n      data\n    });\n  };\n\nconst todoApi = {\n    callAPI\n}\n\nexport default todoApi;\n","const TableData = (data) => {\n    return data;\n}\n\nexport default TableData","import { call, takeEvery, put } from \"redux-saga/effects\";\r\nimport { tableActions } from \"./actions/tableActions\";\r\nimport todoApi from \"./utils/todoApi\";\r\nimport TableData from \"./helpers/TableDataConverter\"\r\nimport mockData from \"./mockData/TableMockData\"\r\nconst todoApiUrl = {\r\n  url: \"https://jsonplaceholder.typicode.com/todos/1\",\r\n}\r\nexport function* fetchDataSaga() {\r\n  try {\r\n    let result = yield call( ()=> todoApi.callAPI(todoApiUrl));\r\n    \r\n    result.data = TableData(mockData.tableBodyMockData);\r\n    yield put({type: \"GET_TABLE_DATA\", payload: result.data});\r\n  } catch (e) {\r\n    yield put({ type: \"TODO_FETCH_FAILED\" });\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeEvery(tableActions.FETCH_DATA_SAGA, fetchDataSaga);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport saga from \"./saga\";  \r\n\r\nlet middleware = [];\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst storeData = {}\r\nmiddleware.push(sagaMiddleware);\r\nconst store = applyMiddleware(...middleware)(createStore)(\r\n  rootReducer,\r\n  storeData\r\n  );\r\n\r\nsagaMiddleware.run(saga);\r\n\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport ListTodo from \"./Containers/ListTodo\";\nimport store from \"./store\";\n\n\nconst App = () => {\n  return (\n      <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n              <Route exact path='/' component={ListTodo} />\n            </Switch>\n        </BrowserRouter>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}